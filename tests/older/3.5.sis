function zero(x:numeric returns numeric)
  case type x
    of integer then 0
    of real then 0.0
    of double then 0.0d0
    of complex then complex(0,0)
    of double_complex then double_complex(0,0)
  end case
end function

function void(returns null)

case type A
  of integer, real, double then A
  of array, stream then A[1]
end case

end function % void

function reverse(A: integer_or_vector
  returns integer_or_vector)
  case type A
    of integer then
      A
    of array[integer] then
      for i in size(A), 1, -1
      returns array of A
      end for
    else
      for i in size(A), 1, -1
      returns array of reverse(A[i])
      end for
  end case
end function % reverse

function type_check(A, B, C: any returns array[character])
  case type A
    of type(B) then "same type as B"
    of type(C) then "same type as C"
    else "type mismatch"
  end case
end function